const path = require('path');
const fs = require('fs');

function fileExist(path) {
  return new Promise(resolve => {
    fs.access(path, fs.constants.F_OK | fs.constants.W_OK, (err) => {
      resolve(!err);
    });
  });
}

function isDirectory(path) {
  return new Promise((resolve, reject) => {
    try {
      fs.lstat(path, (err, stats) => {
        if (err) {
          reject(err);
        } else {
          resolve(stats.isDirectory());
        }
      });
    } catch (e) {
      reject(e);
    }
  });
}

function copyFile(from, to) {
  return new Promise((resolve, reject) => {
    fs.copyFile(from, to, err => {
      if (err) {
        reject(err);
      } else {
        resolve(to);
      }
    });
  });
}

function createDirectory(path, options) {
  return new Promise((resolve, reject) => {
    fs.mkdir(path, options, err => {
      if (err) {
        reject(err);
      } else {
        resolve(true);
      }
    });
  });
}

function deleteFile(dir, file) {
  return new Promise((resolve, reject) => {
    fs.unlink(path.join(dir, file), err => {
      resolve(!!err);
    });
  })
}

module.exports.fileExist = fileExist;
module.exports.isDirectory = isDirectory;
module.exports.copyFile = copyFile;
module.exports.createDirectory = createDirectory;
module.exports.deleteFile = deleteFile;


